version: "3.6"

services:
  mongodb:
    image: mongo:7.0
    container_name: mongodb
    volumes:
      - mongodata:/data/db
    env_file:
      - .env
    networks:
      - server-network
    environment:
      - MONGO_INITDB_DATABASE=${DB_NAME}
      - MONGO_INITDB_ROOT_USERNAME=${DB_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${DB_PASSWORD}
    ports:
      - ${DB_PORT}:${DB_PORT}


  api-nestjs:
    container_name: "api-nestjs"
    build:
      context: ./apps/services/api
      target: development
    env_file:
      - .env
    volumes:
      - ./apps/services/api:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - CONNECT_STRING=${CONNECT_STRING}
      - PORT=${API_PORT}
      - NODE_ENV=development
    ports:
      - ${API_PORT}:${API_PORT}
    restart: unless-stopped
    networks:
      - server-network
    depends_on:
      - mongodb
    
  
  web:
    container_name: "frontend-web"
    build:
      context: .  # Set the context to the root directory of your project
      dockerfile: ./apps/frontends/web/Dockerfile
    env_file:
      - .env
    volumes:
      - ./frontends/web:/usr/src/app
      - /usr/src/app/node_modules
      - .:/usr/src/app  # Bind mount for live code reloading

    environment:
      - NODE_ENV=development
    ports:
      - ${WEB_PORT}:${WEB_PORT}
    restart: always
    networks:
      - server-network
    depends_on:
      - api-nestjs
  # web:
  #   container_name: "frontend-web"
  #   build:
  #     context: ./apps/frontends/web
  #   env_file:
  #     - .env
  #   volumes:
  #     - ./apps/services/api:/usr/src/app
  #     - /usr/src/app/node_modules

  #   command: pnpm dev
  #   environment:
  #     - NODE_ENV=development
  #   ports:
  #     - ${WEB_PORT}:${WEB_PORT}
  #   restart: on-failure
  #   networks:
  #     - server-network
  #   depends_on:
  #     - api-nestjs

networks:
  server-network:
    driver: bridge

volumes:
  mongodata:
    driver: local
